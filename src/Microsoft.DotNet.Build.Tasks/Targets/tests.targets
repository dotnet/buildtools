<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <Target Name="DiscoverTests">
    <ItemGroup>
      <TestsToRun Include="$(TestsToRun)" />
      <_TestsToRun Include="@(TestsToRun->'$(TestWorkingDir)*.Tests\**\%(Identity).dll')" />
      <TestAssemblies Condition="'%(_TestsToRun.Identity)' == ''" Include="$(TestWorkingDir)*.Tests\**\*.Tests.dll" Exclude="@(SkipTestAssemblies)" />
      <TestAssemblies Condition="'%(_TestsToRun.Identity)' != ''" Include="%(_TestsToRun.Identity)" Exclude="@(SkipTestAssemblies)" />
      <TestDirectories Include="@(TestAssemblies -> '%(RootDir)%(Directory)')" KeepDuplicates="false" />
    </ItemGroup>
  </Target>

  <PropertyGroup>
    <CoverageReportDir Condition="'$(CoverageReportDir)' == ''">$(TestWorkingDir)coverage\</CoverageReportDir>
    <_CoverageEnabled>false</_CoverageEnabled>
    <_CoverageEnabled Condition="'$(SkipTests)' != 'true' and '$(OS)' == 'Windows_NT' and '$(Coverage)' == 'true'">true</_CoverageEnabled>
  </PropertyGroup>
  
  <Target Name="RunTests"
          DependsOnTargets="DiscoverTests"
          Inputs="@(TestDirectories)"
          Outputs="%(Identity)*.*"
          Condition="'$(SkipTests)' != 'True'">

    <ItemGroup>
      <!-- Batch directories, so we can run every directory in its own process.
           Run all test assemblies in the same directory in the same process. -->
      <ThisDirectoryAssemblies Include="%(TestDirectories.Identity)*.Tests.dll" />
    </ItemGroup>

    <!-- xUnit Traits -->
    <PropertyGroup>
      <ExcludeTraits Condition="'$(ExcludeTraits)'==''">category=outerloop;category=failing</ExcludeTraits>
    </PropertyGroup>
    <ItemGroup>
      <IncludeTraitsItems Include="$(IncludeTraits)" />
      <ExcludeTraitsItems Include="$(ExcludeTraits)" />
    </ItemGroup>

    <!-- Coverage options -->
    <PropertyGroup>
      <ThisAssemblyName>@(ThisDirectoryAssemblies->'%(filename)')</ThisAssemblyName>
      <CoverageVersion>4.5.3522</CoverageVersion>
      <CoverageCommand>$(PackagesDir)OpenCover.$(CoverageVersion)\OpenCover.Console.exe</CoverageCommand>
      <CoverageOptions>-filter:"+[*]* -[*.Tests]*" -register:user -nodefaultfilters -target:corerun.exe -output:$(CoverageReportDir)$(ThisAssemblyName).coverage.xml</CoverageOptions>
    </PropertyGroup>
    
    <!-- Construct and invoke xunit console runner via corerun.exe -->
    <PropertyGroup>
      <XunitCommandLine Condition="!$(_CoverageEnabled)">corerun.exe xunit.console.netcore.exe</XunitCommandLine>
      <XunitCommandLine Condition="$(_CoverageEnabled)">$(CoverageCommand)</XunitCommandLine>
      
      <XunitOptions Condition="'@(ThisDirectoryAssemblies)'!=''">$(XunitOptions) "%(ThisDirectoryAssemblies.Identity)" </XunitOptions>
      <XunitOptions Condition="'@(IncludeTraitsItems)'!=''">$(XunitOptions)-trait @(IncludeTraitsItems, ' -trait ') </XunitOptions>
      <XunitOptions Condition="'@(ExcludeTraitsItems)'!=''">$(XunitOptions)-notrait @(ExcludeTraitsItems, ' -notrait ') </XunitOptions>
      
      <XunitOptions Condition="$(_CoverageEnabled)">$(CoverageOptions) -targetargs:"xunit.console.netcore.exe $(XunitOptions)"</XunitOptions>
    </PropertyGroup>
    
    <MakeDir Condition="$(_CoverageEnabled)" Directories="$(CoverageReportDir)" />

    <Exec
      Command="$(XunitCommandLine) $(XunitOptions)"
      WorkingDirectory="%(TestDirectories.Identity)"
      ContinueOnError="ErrorAndContinue">
      <!-- Store the exit codes in the XUnitExitCodes item.  The caller of the target will
            check the item group for any non-zero codes if they like -->
      <Output ItemName="XUnitExitCodes" TaskParameter="ExitCode"/>
    </Exec>
  </Target>

  <Target Name="GenerateCoverageReport"
    AfterTargets="RunTests"
    Inputs="$(CoverageReportDir)\*.coverage.xml"
    Outputs="$(CoverageReportDir)*.*"
    Condition="$(_CoverageEnabled)">
    
    <PropertyGroup>
      <ReportGeneratorVersion>2.0.4.0</ReportGeneratorVersion>
      <ReportGeneratorCommandLine>$(PackagesDir)ReportGenerator.$(ReportGeneratorVersion)\ReportGenerator.exe</ReportGeneratorCommandLine>
      <ReportGeneratorOptions>-reports:$(CoverageReportDir)\*.coverage.xml -targetdir:$(CoverageReportDir) -reporttypes:Html</ReportGeneratorOptions>
    </PropertyGroup>
    
    <Exec
      Command="$(ReportGeneratorCommandLine) $(ReportGeneratorOptions)"
      ContinueOnError="ErrorAndContinue" />
    
  </Target>
  
</Project>
