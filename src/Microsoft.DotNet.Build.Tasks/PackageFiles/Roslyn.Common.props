<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <RoslynVersion>2.6.0-beta3-62316-02</RoslynVersion>
    <RoslynPackageName>Microsoft.Net.Compilers</RoslynPackageName>
    <RoslynTargetsPath>$(ToolRuntimePath)</RoslynTargetsPath>
  </PropertyGroup>

  <PropertyGroup>
    <RoslynPropsFile Condition="'$(RoslynPropsFile)' == '' and '$(RunningOnCore)' != 'true'">$(BuildToolsTaskDir)roslyn/build/Microsoft.Net.Compilers.props</RoslynPropsFile>
  </PropertyGroup>

  <!--
    On Unix we always use a version of Roslyn we restore from NuGet and we have to work around some known issues.
  -->
  <PropertyGroup Condition="'$(RoslynPropsFile)' == '' and '$(RunningOnCore)' == 'true'">
    <RoslynPackageName>Microsoft.NETCore.Compilers</RoslynPackageName>
    <RoslynPackageDir>$(PackagesDir)/$(RoslynPackageName.ToLower())/$(RoslynVersion)/</RoslynPackageDir>
    <RoslynPropsFile>$(RoslynPackageDir)build/$(RoslynPackageName).props</RoslynPropsFile>

    <!--
      Portable PDBs are now supported in Linux and OSX with .Net Core MSBuild.
    -->
    <DebugType>Portable</DebugType>
  </PropertyGroup>


  <!-- If we're not using the compiler server, set ToolPath/Exe to direct to
       the exes in this package -->
  <PropertyGroup Condition="'$(UseRoslynCompilers)' != 'false' and '$(RoslynIncompatibleMsbuildVersion)' == 'true'">
    <CscToolPath Condition="'$(RunningOnCore)' == 'true'">$(RoslynPackageDir)tools</CscToolPath>
    <CscToolPath Condition="'$(RunningOnCore)' != 'true'">$(BuildToolsTaskDir)roslyn/tools</CscToolPath>
    <CscToolExe>csc.exe</CscToolExe>
    <VbcToolPath Condition="'$(RunningOnCore)' == 'true'">$(RoslynPackageDir)tools</VbcToolPath>
    <VbcToolPath Condition="'$(RunningOnCore)' != 'true'">$(BuildToolsTaskDir)roslyn/tools</VbcToolPath>
    <VbcToolExe>vbc.exe</VbcToolExe>
  </PropertyGroup>

</Project>